{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}ML noML
       {txt}log:  {res}/Users/cjr/Repos/fhi.ml-resource-time.2023/products/log.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}27 Feb 2023, 13:40:33
{txt}
{com}. 
. // Set up globals.
. do globals/globals
{txt}
{com}. version 16.1
{txt}
{com}. 
. global data_file  "data/raw/Blinded data sheet_310123 - Downloaded 27-02-23.xlsx"
{txt}
{com}. global sheet_name "Data Extraction Form"
{txt}
{com}. global cellrange  A1:AB40
{txt}
{com}. global signature "39:28(17933):3819763061:1092073612"
{txt}
{com}. 
. global random_seed 1234
{txt}
{com}. 
. global report_filename "products/report.docx"
{txt}
{com}. 
{txt}end of do-file

{com}. 
. // Set up Stata.
. do setup/setup
{txt}
{com}. version 16.1
{txt}
{com}. 
. // Set the random number generator seed.
. set rng  mt64s
{txt}
{com}. set seed ${c -(}random_seed{c )-}
{txt}
{com}. set rngstream 1
{txt}
{com}. 
. // Set up Stata's path to use the "packages" directory for add-on packages.
. net set ado "./packages"
{txt}
{com}. sysdir set PERSONAL "./packages"
{txt}
{com}. 
. // Specify formats.
. set cformat %9.2f
{txt}
{com}. set pformat %5.2f
{txt}
{com}. set sformat %8.2f
{txt}
{com}. 
{txt}end of do-file

{com}. 
. // Import and process the data.
. do data/data
{txt}
{com}. version 16.1
{txt}
{com}. 
. // Load the data and check its signature is as expected.
. import excel "${c -(}data_file{c )-}", sheet("${c -(}sheet_name{c )-}") cellrange(${c -(}cellrange{c )-}) firstrow allstring
{res}{text}(28 vars, 39 obs)

{com}. datasignature
  {res}39:28(17933):3819763061:1092073612
{txt}
{com}. assert r(datasignature) == "${c -(}signature{c )-}"
{txt}
{com}. 
. // Rename the health/welfare variable and use value labels.
. tempvar field
{txt}
{com}. rename AreaHealthorWelfare `field'
{res}{txt}
{com}. replace `field' = "Healthcare" if `field' == "H"
{txt}variable {bf}__000000{sf} was {bf}{res}str1{sf}{txt} now {bf}{res}str10{sf}
{txt}(19 real changes made)

{com}. replace `field' = "Welface"    if `field' == "W"
{txt}(20 real changes made)

{com}. encode `field' , generate(field)
{txt}
{com}. 
. 
{txt}end of do-file

{com}. 
. * // Do estimation.
. * do estimation/estimate
. 
. * // Make figures
. * do figures/figures
. 
. * // Obtain the git revision hash, which is used in the reports.
. * tempfile git_revision_filename
. * tempname revision_file
. * shell git rev-parse --short HEAD > "`git_revision_filename'"
. * file open `revision_file' using `git_revision_filename', read text
. * file read `revision_file' line
. * global git_revision = "`macval(line)'"
. 
. * // Make the report.
. * do reports/report
. 
{txt}end of do-file

{com}. codebook field 

{txt}{hline}
{res}field{right:Area (Health or Welfare)}
{txt}{hline}

{col 19}type:  numeric ({res}long{txt})
{ralign 22:label}:  {res:field}

{col 18}range:  [{res}1{txt},{res}2{txt}]{col 55}units:  {res}1
{col 10}{txt}unique values:  {res}2{col 51}{txt}missing .:  {res}0{txt}/{res}39

{txt}{col 13}tabulation:  Freq.   Numeric  Label
{col 21}{res}        19{col 33}       1{col 43}{txt}Healthcare
{col 21}{res}        20{col 33}       2{col 43}{txt}Welface

{com}. 